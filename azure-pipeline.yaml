# trigger:
# - main

# variables:

#   # Azure Resource Manager connection created during pipeline creation
#   azureSubscription: '9db02152-2d31-40f6-8c18-107c13bca52b'
#   webAppName: 'pipeline-as'
#   environmentName: 'pipeline-as'
#   vmImageName: 'vmAGENT'

  
# stages:
# - stage: 'Sonar_code_Scan'
#   displayName: 'Sonar code Scan'
#   jobs:
#   - job:
#     displayName: 'Sonar code Scan'
#     pool: $(vmImageName)
#     steps:
#     - task: SonarQubePrepare@7
#       inputs:
#         SonarQube: 'SonarQube'
#         scannerMode: 'other'
#         extraProperties: |
#           # Additional properties that will be passed to the scanner,
#           # Put one key=value per line, example:
#           # sonar.exclusions=**/*.bin
#           sonar.projectKey=zeus-project_zeus-project_1276db20-bd85-46be-8f71-0078d509c5a0
#           sonar.projectName=zeus-project

#     - task: Maven@4
#       inputs:
#         azureSubscription: 'Portal-AZURE'
#         mavenPomFile: 'pom.xml'
#         goals: 'clean install sonar:sonar'
#         publishJUnitResults: true
#         testResultsFiles: '**/surefire-reports/TEST-*.xml'
#         javaHomeOption: 'JDKVersion'
#         mavenVersionOption: 'Default'
#         mavenAuthenticateFeed: false
#         effectivePomSkip: false
#         sonarQubeRunAnalysis: true
#         sqMavenPluginVersionChoice: 'latest'

#     - task: SonarQubePublish@7
#       inputs:
#         pollingTimeoutSec: '150'


# - stage: Build
#   displayName: Build stage
#   jobs:
#   - job: MavenPackageAndPublishArtifacts
#     displayName: Maven Package and Publish Artifacts
#     pool: $(vmImageName)

#     steps:
#     - task: Maven@4
#       displayName: 'Maven Package'
#       inputs:
#         azureSubscription: 'Azure Testing (9db02152-2d31-40f6-8c18-107c13bca52b)'
#         mavenPomFile: 'pom.xml'
#         goals: 'clean package'
#         publishJUnitResults: true
#         testResultsFiles: '**/surefire-reports/TEST-*.xml'
#         javaHomeOption: 'JDKVersion'
#         mavenVersionOption: 'Default'
#         mavenOptions: '-Xmx3072m'
#         mavenAuthenticateFeed: false
#         effectivePomSkip: false
#         sonarQubeRunAnalysis: false

#     - task: CopyFiles@2
#       displayName: 'Copy Files to artifact staging directory'
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: '**/target/*.?(war|jar)'
#         TargetFolder: $(Build.ArtifactStagingDirectory)

#     - upload: $(Build.ArtifactStagingDirectory)
#       artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: DeployLinuxWebApp
#     displayName: Deploy Linux Web App
#     environment: $(environmentName)
#     pool: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Azure Web App Deploy: pipeline-as'
#             inputs:
#               azureSubscription: 'Portal-AZURE'
#               appType: 'webAppLinux'
#               appName: 'pipeline-as'
#               package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
#               runtimeStack: 'JAVA|17-java17'

